// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TankToys.Database;

#nullable disable

namespace TankToysBackV2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TankToys.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("GameMode")
                        .HasColumnType("integer");

                    b.Property<List<string>>("GuestList")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("TankToys.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = "0x0000000000000000000000000000000000000000",
                            Level = 1,
                            ProfileImage = "",
                            Username = "TestUser1"
                        },
                        new
                        {
                            Id = "0x0000000000000000000000000000000000000001",
                            Level = 1,
                            ProfileImage = "",
                            Username = "TestUser2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
